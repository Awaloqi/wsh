/* tslint:disable */
/* eslint-disable */
/**
 * WashMix
 * WashMix REST API
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Address,
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    Client,
    ClientFromJSON,
    ClientFromJSONTyped,
    ClientToJSON,
} from './';

/**
 * 
 * @export
 * @interface Delivery
 */
export interface Delivery {
    /**
     * 
     * @type {number}
     * @memberof Delivery
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    readonly order?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    kind?: DeliveryKindEnum;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    status?: DeliveryStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    start?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    end?: string;
    /**
     * 
     * @type {Address}
     * @memberof Delivery
     */
    address?: Address;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    readonly comment?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */
    readonly isRush?: string;
    /**
     * 
     * @type {number}
     * @memberof Delivery
     */
     readonly changed?: string;
    /**
     * 
     * @type {string}
     * @memberof Delivery
     */

    sorting?: number | null;
    /**
     * 
     * @type {Client}
     * @memberof Delivery
     */
    client?: Client;
}

export function DeliveryFromJSON(json: any): Delivery {
    return DeliveryFromJSONTyped(json, false);
}

export function DeliveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Delivery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'start': !exists(json, 'start') ? undefined : json['start'],
        'end': !exists(json, 'end') ? undefined : json['end'],
        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'isRush': !exists(json, 'is_rush') ? undefined : json['is_rush'],
        'sorting': !exists(json, 'sorting') ? undefined : json['sorting'],
        'client': !exists(json, 'client') ? undefined : ClientFromJSON(json['client']),
        'changed': !exists(json, 'changed') ? undefined : json['changed'],

    };
}

export function DeliveryToJSON(value?: Delivery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'note': value.note,
        'kind': value.kind,
        'status': value.status,
        'date': value.date,
        'start': value.start,
        'end': value.end,
        'changed': value.changed,

        'address': AddressToJSON(value.address),
        'sorting': value.sorting,
        'client': ClientToJSON(value.client),
    };
}

/**
* @export
* @enum {string}
*/
export enum DeliveryKindEnum {
    Pickup = 'pickup',
    Dropoff = 'dropoff'
}
/**
* @export
* @enum {string}
*/
export enum DeliveryStatusEnum {
    Cancelled = 'cancelled',
    Accepted = 'accepted',
    InProgress = 'in_progress',
    Completed = 'completed'
}


