{"version":3,"sources":["ui/Input/Input.module.scss","ui/Textarea/Textarea.module.scss","ui/Button/Button.module.scss","apps/driver/Driver.module.scss","ui/Typography/Typography.module.scss","ui/Link/Link.module.scss","apps/driver/Route.module.scss","ui/Typography/Typography.tsx","ui/Link/Link.tsx","services/storage.ts","utils/string.ts","utils/object.ts","ui/Input/InputStateless.tsx","ui/Input/Input.tsx","ui/Button/Button.tsx","services/formValidator.ts","apps/driver/LoginForm.tsx","api/runtime.ts","api/models/TokenObtainSliding.ts","api/models/LoginResponse.ts","api/models/Address.ts","api/models/Client.ts","api/models/Delivery.ts","constants/common.ts","apps/driver/apiDriver.ts","api/apis/DriverApi.ts","utils/date.ts","ui/Textarea/TextareaStateless.tsx","apps/driver/Note.tsx","hooks/useDebounce.ts","apps/driver/Route.tsx","apps/driver/StatusFilter.tsx","apps/driver/Deliveries.tsx","apps/driver/Timer.tsx","apps/driver/Driver.tsx","apps/DriverApp.tsx","serviceWorker.js","index.driver.tsx"],"names":["module","exports","H3","className","children","cn","styles","h3","Body","as","weight","color","fontStyle","Component","body","light","medium","semiBold","bold","italic","grey","darkGrey","red","green","Body2","body2","white","Link","variant","rest","classNames","link","link__accent","session","createStore","sessionStorage","saveUserStorage","user","store","set","getUser","get","cleanUser","remove","capitalize","s","charAt","toUpperCase","slice","snakeToWhite","str","replace","joinObjectValues","obj","Object","entries","map","key","value","Array","isArray","join","reduce","acc","group","normalizeAsyncError","e","Response","status","detail","statusText","json","then","message","InputStateless","label","required","name","onChange","error","isLoading","isSuccess","handleChange","useCallback","currentTarget","isError","Boolean","input","input_error","input_success","input__label","htmlFor","id","input__field","input__field_error","input__field_success","input__oval","input__oval_error","input__loading","input__errorMessage","Input","meta","touched","submitError","Button","size","isBlock","disabled","props","button","button_primary","button_accent","button_primary_outline","button_outline_accent","button_small","button_medium","button_block","button_loading","linkProps","href","startsWith","target","rel","composeValidators","validators","allValues","validator","undefined","minLength","length","email","test","LoginForm","handleSubmit","pristine","submitting","onSubmit","component","type","validate","placeholder","BASE_PATH","RequiredError","Error","constructor","field","msg","super","Configuration","configuration","this","basePath","fetchApi","window","fetch","bind","middleware","queryParamsStringify","querystring","username","password","apiKey","accessToken","headers","credentials","exists","params","prefix","keys","fullKey","multiValue","singleValue","encodeURIComponent","String","filter","part","JSONApiResponse","raw","transformer","jsonValue","VoidApiResponse","TokenObtainSlidingToJSON","LoginResponseFromJSON","ignoreDiscriminator","LoginResponseFromJSONTyped","AddressFromJSON","Date","AddressFromJSONTyped","AddressToJSON","zipCode","title","addressLine1","addressLine2","instructions","hasDoorman","ClientFromJSON","ClientFromJSONTyped","ClientToJSON","DeliveryFromJSON","DeliveryFromJSONTyped","DeliveryToJSON","note","kind","date","start","end","changed","address","sorting","client","DeliveryKindEnum","DeliveryStatusEnum","process","REACT_APP_FACEBOOK_APP_ID","REACT_APP_GOOGLE_CLIENT_ID","REACT_APP_STRIPE_PUBLIC_KEY","REACT_APP_GOOGLE_PLACES_API_KEY","REACT_APP_SENTRY_DSN","token","api","url","init","a","fetchParams","pre","response","post","clone","withMiddleware","middlewares","next","concat","withPreMiddleware","preMiddlewares","withPostMiddleware","postMiddlewares","request","context","createFetchParams","path","query","FormData","URLSearchParams","Blob","JSON","stringify","assign","method","driverAuthLoginCreateRaw","requestParameters","data","runtime","queryParameters","headerParameters","driverAuthLoginCreate","driverDeliveriesCreateRaw","driverDeliveriesCreate","driverDeliveriesDeleteRaw","driverDeliveriesDelete","driverDeliveriesListRaw","driverDeliveriesList","driverDeliveriesPartialUpdateRaw","driverDeliveriesPartialUpdate","driverDeliveriesReadRaw","driverDeliveriesRead","driverDeliveriesUpdateRaw","driverDeliveriesUpdate","postLogin","getDeliveries","patchDeliverytoAccepted","Accepted","patchDeliverytoInProgress","InProgress","patchDeliverytoCompleted","Completed","patchDeliveryStart","patchDeliveryFinish","patchDeliveryNote","API_DATE_FORMAT","parseDate","moment","TextareaStateless","textarea","textarea_error","textarea__label","textarea__field","textarea__field_error","textarea__field_success","textarea__oval","textarea__oval_error","textarea__loading","textarea__errorMessage","Note","initialValue","useState","setValue","debouncedCouponTerm","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","useQuery","enabled","rows","Route","delivery","changeStatus","setChangeStatus","changeTo","setChangeTo","useMutation","onSuccess","queryCache","invalidateQueries","deliveryStart","deliveryFinish","deliveryAccepted","deliveryInProgress","deliveryCompleted","handleStart","handleFinish","handleStatusUpdate","newStatus","route","route_rush","isRush","route__aligner","route__statement","format","statusWithChange","onClick","row_contain","console","log","delivery_select","delivery_btn","comment","mainPhone","firstName","lastName","client_numbers","route__actions","StatusFilter","currentStatus","setStatus","handleClick","preventDefault","history","replaceState","parse","attributes","getNamedItem","index","Deliveries","document","location","search","currentFilter","setFilter","currentSearch","setSearch","deliveries","col_contain","Cancelled","toLowerCase","includes","millisecondsToMinutesAndSeconds","milliseconds","ms","Math","abs","sign","minutes","floor","seconds","toFixed","padStart","getRemainingTime","time","add","diff","Timer","initialTime","onTimeout","timer","setTimer","interval","setInterval","remainingTime","clearInterval","initialUserState","Driver","setUser","throwOnError","login","values","catch","loginTime","toISOString","FORM_ERROR","handleOnTimeout","reload","handleLogout","driver","driver___login","driver__container","driver__title","reactQueryConfig","queries","retry","refetchOnMount","refetchOnWindowFocus","mutations","DriverApp","config","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c27bde44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2_YIs\",\"input__field\":\"Input_input__field__1sK0P\",\"input_success\":\"Input_input_success__Cb1nk\",\"input__field_stripe\":\"Input_input__field_stripe__OPJ7K\",\"input__field_error\":\"Input_input__field_error__S9KTt\",\"input__field_success\":\"Input_input__field_success__3QFyj\",\"input__label\":\"Input_input__label__VHSLA\",\"input__oval\":\"Input_input__oval__MtwwQ\",\"input__loading\":\"Input_input__loading__DwnXq\",\"loadingAnimation\":\"Input_loadingAnimation__1rKmR\",\"input__oval_error\":\"Input_input__oval_error__3q3uH\",\"input__errorMessage\":\"Input_input__errorMessage__1REQd\",\"input__dropdownBase\":\"Input_input__dropdownBase__34FbA\",\"input__dropdown\":\"Input_input__dropdown__2f_hM\",\"input__dropdown_hidden\":\"Input_input__dropdown_hidden__37j3l\",\"input__dropdown_item\":\"Input_input__dropdown_item__2qxDG\",\"input__dropdown_item_active\":\"Input_input__dropdown_item_active__3zAvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__19Erk\",\"textarea_error\":\"Textarea_textarea_error__3JBOn\",\"textarea__field\":\"Textarea_textarea__field__2Fo15\",\"textarea__label\":\"Textarea_textarea__label__1wTum\",\"textarea__field_error\":\"Textarea_textarea__field_error__3DYY2\",\"textarea__field_success\":\"Textarea_textarea__field_success__3b6PQ\",\"textarea__errorMessage\":\"Textarea_textarea__errorMessage__3ZcQI\",\"textarea__oval\":\"Textarea_textarea__oval__VJUVb\",\"textarea__loading\":\"Textarea_textarea__loading__143fw\",\"loadingAnimation\":\"Textarea_loadingAnimation__e24zl\",\"textarea__oval_error\":\"Textarea_textarea__oval_error__2roo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1BXoA\",\"disabled\":\"Button_disabled__27biu\",\"button_loading\":\"Button_button_loading__1ePy1\",\"loadingAnimation\":\"Button_loadingAnimation__2ZzU_\",\"button_primary\":\"Button_button_primary__atxah\",\"button_primary_outline\":\"Button_button_primary_outline__1suv1\",\"button_accent\":\"Button_button_accent__1vxXW\",\"button_outline_accent\":\"Button_button_outline_accent__3gjPE\",\"button_small\":\"Button_button_small__1eund\",\"button_medium\":\"Button_button_medium__xNIEe\",\"button_block\":\"Button_button_block__LAgUt\",\"button_icon\":\"Button_button_icon__2cUpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"driver\":\"Driver_driver__3Jpxr\",\"driver___login\":\"Driver_driver___login__1BHH0\",\"driver__container\":\"Driver_driver__container__3vGfX\",\"driver__title\":\"Driver_driver__title__3hWwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Typography_h1__3vZ9g\",\"h2\":\"Typography_h2__2vj_t\",\"h3\":\"Typography_h3__2AMSR\",\"h4\":\"Typography_h4__2RRic\",\"title\":\"Typography_title__2YrKh\",\"body\":\"Typography_body__1GYA6\",\"body2\":\"Typography_body2__1Z_c8\",\"caption\":\"Typography_caption__2iHu3\",\"small\":\"Typography_small__3-J9M\",\"light\":\"Typography_light__2fxsI\",\"medium\":\"Typography_medium__7E9zT\",\"semiBold\":\"Typography_semiBold__34lN6\",\"bold\":\"Typography_bold__TJ629\",\"italic\":\"Typography_italic__3ibF7\",\"grey\":\"Typography_grey__HI0uL\",\"darkGrey\":\"Typography_darkGrey__3SVXr\",\"red\":\"Typography_red__3mhaQ\",\"green\":\"Typography_green__3137Q\",\"white\":\"Typography_white__QVBQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2CGjY\",\"link__accent\":\"Link_link__accent__15GZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"route\":\"Route_route__2nxXC\",\"route_rush\":\"Route_route_rush__3BDfY\",\"route__aligner\":\"Route_route__aligner__2dNX1\",\"route__statement\":\"Route_route__statement__34P3Z\",\"route__actions\":\"Route_route__actions__2qnQp\",\"statusWithChange\":\"Route_statusWithChange__3DEmx\",\"row_contain\":\"Route_row_contain__3CCmc\",\"col_contain\":\"Route_col_contain__2Pq4u\",\"delivery_select\":\"Route_delivery_select__3qKur\",\"delivery_btn\":\"Route_delivery_btn__2E3Ig\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport styles from './Typography.module.scss';\n\ntype HeaderProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nexport const H1 = ({ className, children }: HeaderProps) => {\n  return <h1 className={cn(styles.h1, className)}>{children}</h1>;\n};\n\nexport const H2 = ({ className, children }: HeaderProps) => {\n  return <h2 className={cn(styles.h2, className)}>{children}</h2>;\n};\n\nexport const H3 = ({ className, children }: HeaderProps) => {\n  return <h3 className={cn(styles.h3, className)}>{children}</h3>;\n};\n\nexport const H4 = ({ className, children }: HeaderProps) => {\n  return <h4 className={cn(styles.h4, className)}>{children}</h4>;\n};\n\nexport const Title = ({ className, children }: HeaderProps) => {\n  return <div className={cn(styles.title, className)}>{children}</div>;\n};\n\ntype BodyProps = {\n  children: ReactNode;\n  as?: keyof JSX.IntrinsicElements;\n  className?: string;\n  weight?: 'light' | 'normal' | 'medium' | 'semi-bold' | 'bold';\n  color?: 'black' | 'grey' | 'dark-grey' | 'red' | 'green';\n  fontStyle?: 'normal' | 'italic';\n};\n\nexport const Body = ({\n  className,\n  as = 'div',\n  weight = 'normal',\n  color = 'black',\n  fontStyle = 'normal',\n  children,\n}: BodyProps) => {\n  const Component = as;\n  return (\n    <Component\n      className={cn(styles.body, className, {\n        [styles.light]: weight === 'light',\n        [styles.medium]: weight === 'medium',\n        [styles.semiBold]: weight === 'semi-bold',\n        [styles.bold]: weight === 'bold',\n        [styles.italic]: fontStyle === 'italic',\n        [styles.grey]: color === 'grey',\n        [styles.darkGrey]: color === 'dark-grey',\n        [styles.red]: color === 'red',\n        [styles.green]: color === 'green',\n      })}\n    >\n      {children}\n    </Component>\n  );\n};\n\ntype Body2Props = {\n  children: ReactNode;\n  as?: keyof JSX.IntrinsicElements;\n  className?: string;\n  weight?: 'light' | 'normal' | 'medium' | 'semi-bold' | 'bold';\n  color?: 'white' | 'black' | 'grey' | 'dark-grey' | 'red' | 'green';\n  fontStyle?: 'normal' | 'italic';\n};\n\nexport const Body2 = ({\n  className,\n  as = 'div',\n  weight = 'normal',\n  color = 'black',\n  fontStyle = 'normal',\n  children,\n}: Body2Props) => {\n  const Component = as;\n  return (\n    <Component\n      className={cn(styles.body2, className, {\n        [styles.light]: weight === 'light',\n        [styles.medium]: weight === 'medium',\n        [styles.semiBold]: weight === 'semi-bold',\n        [styles.bold]: weight === 'bold',\n        [styles.italic]: fontStyle === 'italic',\n        [styles.grey]: color === 'grey',\n        [styles.darkGrey]: color === 'dark-grey',\n        [styles.red]: color === 'red',\n        [styles.green]: color === 'green',\n        [styles.white]: color === 'white',\n      })}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport const Caption = ({\n  className,\n  as = 'span',\n  weight = 'normal',\n  color = 'black',\n  fontStyle = 'normal',\n  children,\n}: Body2Props) => {\n  const Component = as;\n  return (\n    <Component\n      className={cn(styles.caption, className, {\n        [styles.light]: weight === 'light',\n        [styles.medium]: weight === 'medium',\n        [styles.semiBold]: weight === 'semi-bold',\n        [styles.bold]: weight === 'bold',\n        [styles.italic]: fontStyle === 'italic',\n        [styles.grey]: color === 'grey',\n        [styles.darkGrey]: color === 'dark-grey',\n        [styles.red]: color === 'red',\n        [styles.green]: color === 'green',\n        [styles.white]: color === 'white',\n      })}\n    >\n      {children}\n    </Component>\n  );\n};\n\ntype SmallProps = {\n  children: ReactNode;\n  as?: keyof JSX.IntrinsicElements;\n  className?: string;\n  weight?: 'light' | 'normal' | 'medium' | 'bold';\n  color?: 'black' | 'grey' | 'dark-grey' | 'red' | 'green';\n};\n\nexport const Small = ({ className, as = 'div', weight = 'normal', color = 'black', children }: SmallProps) => {\n  const Component = as;\n  return (\n    <Component\n      className={cn(styles.small, className, {\n        [styles.light]: weight === 'light',\n        [styles.medium]: weight === 'medium',\n        [styles.bold]: weight === 'bold',\n        [styles.grey]: color === 'grey',\n        [styles.darkGrey]: color === 'dark-grey',\n        [styles.red]: color === 'red',\n        [styles.green]: color === 'green',\n      })}\n    >\n      {children}\n    </Component>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Link as RouterLink, LinkProps as ReactLinkProps } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport styles from './Link.module.scss';\n\ntype CommonProps = {\n  children: ReactNode;\n  className?: string;\n  variant?: 'primary' | 'accent';\n};\n\ntype ButtonProps = {\n  onClick?: () => void;\n};\n\ntype Props = CommonProps & (ReactLinkProps | ButtonProps);\n\nexport const Link = ({ className, variant = 'primary', children, ...rest }: Props) => {\n  const classNames = cn(styles.link, className, {\n    [styles.link__accent]: variant === 'accent',\n  });\n  if ('to' in rest) {\n    return (\n      <RouterLink {...rest} className={classNames}>\n        {children}\n      </RouterLink>\n    );\n  }\n  return (\n    <button {...rest} className={classNames}>\n      {children}\n    </button>\n  );\n};\n","import store from 'store';\nimport { createStore } from 'store/src/store-engine';\nimport sessionStorage from 'store/storages/sessionStorage';\n\nexport type User = {\n  email: string;\n  token: string;\n  isStaff?: boolean;\n  loginTime?: string;\n};\n\nconst session = createStore([sessionStorage]);\n\nexport const saveUserSession = (user: User) => {\n  session.set('user', user);\n};\n\nexport const saveUserStorage = (user: User) => {\n  store.set('user', user);\n};\n\nexport const getUser = () => {\n  let user: User = session.get('user');\n  if (user) return user;\n  user = store.get('user');\n  if (user) {\n    session.set('user', user);\n    return user;\n  }\n};\n\nexport const cleanUser = () => {\n  session.remove('user');\n  store.remove('user');\n};\n","export const capitalize = (s?: string) => (typeof s === 'string' ? s.charAt(0).toUpperCase() + s.slice(1) : '');\n\nexport const upperCase = (s?: string) => (typeof s === 'string' ? s.toUpperCase() : '');\n\nexport const formatSum = (sum?: number, precision = 2) =>\n  typeof sum === 'number' ? `$${(sum / 100).toFixed(precision)}` : '';\n\nexport const formatPercent = (value?: number) => (typeof value === 'number' ? `${value.toFixed(0)}%` : '');\n\nexport const snakeToCamel = (str: string) => str.replace(/(_[a-z])/g, (group) => group.toUpperCase().replace('_', ''));\n\nexport const snakeToWhite = (str?: string) => (typeof str === 'string' ? str.replace('_', ' ') : '');\n","import { snakeToCamel } from './string';\n\nexport const joinObjectValues = (obj: Record<string, string[]>) =>\n  Object.entries(obj)\n    .map(([key, value]) => [key, Array.isArray(value) ? value.join(' ') : value])\n    .reduce((acc, [key, value]) => {\n      acc[snakeToCamel(key)] = value;\n      return acc;\n    }, {} as Record<string, string>);\n\nexport const normalizeAsyncError = (e: Response | Error) => {\n  if (e instanceof Response) {\n    if (e.status >= 500) {\n      return { detail: e.statusText };\n    }\n    return e.json().then(joinObjectValues);\n  }\n  return { detail: e.message };\n};\n","import React, { ChangeEvent, useCallback } from 'react';\nimport cn from 'classnames';\nimport styles from './Input.module.scss';\n\ntype Props = {\n  label: string;\n  name: string;\n  placeholder?: string;\n  disabled?: boolean;\n  required?: boolean;\n  value?: string;\n  onChange?: (value: string) => void;\n  error?: string;\n  isLoading?: boolean;\n  isSuccess?: boolean;\n};\n\nconst NBSP = '\\u00A0';\n\nexport const InputStateless = ({ label, required, name, onChange, error, isLoading, isSuccess, ...rest }: Props) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange?.(e.currentTarget.value);\n    },\n    [onChange],\n  );\n\n  const isError = Boolean(error);\n  return (\n    <div className={cn(styles.input, { [styles.input_error]: isError, [styles.input_success]: isSuccess })}>\n      <label className={styles.input__label} htmlFor={name}>\n        {label}\n      </label>\n      <input\n        {...rest}\n        id={name}\n        className={cn(styles.input__field, {\n          [styles.input__field_error]: isError,\n          [styles.input__field_success]: isSuccess,\n        })}\n        onChange={handleChange}\n      />\n      {required && <i className={cn(styles.input__oval, { [styles.input__oval_error]: isError })} />}\n      {isLoading && <i className={cn(styles.input__loading)} />}\n      <span className={styles.input__errorMessage}>{error ? error : NBSP}</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { InputStateless } from './InputStateless';\n\ntype Props = {\n  label: string;\n  placeholder?: string;\n  disabled?: boolean;\n  required?: boolean;\n} & FieldRenderProps<string>;\n\nexport const Input = ({ input, meta: { error, touched, submitError }, ...rest }: Props) => {\n  return <InputStateless {...input} {...rest} error={touched && (error || submitError)} />;\n};\n","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport styles from './Button.module.scss';\n\ntype CommonProps = {\n  children: ReactNode;\n  className?: string;\n  variant?: 'primary' | 'accent' | 'outline-primary' | 'outline-accent';\n  disabled?: boolean;\n  size?: 'sm' | 'md';\n  isBlock?: boolean;\n  type?: 'submit' | 'button';\n  isLoading?: boolean;\n};\n\ntype ButtonProps = {\n  onClick?: () => void;\n};\n\ntype LinkProps = {\n  href: string;\n};\n\ntype Props = CommonProps & (RouterLinkProps | ButtonProps | LinkProps);\n\nexport const Button = ({ className, variant, size, isBlock, isLoading, disabled, children, ...props }: Props) => {\n  const classNames = cn(styles.button, className, {\n    [styles.button_primary]: variant === 'primary',\n    [styles.button_accent]: variant === 'accent',\n    [styles.button_primary_outline]: variant === 'outline-primary',\n    [styles.button_outline_accent]: variant === 'outline-accent',\n    [styles.button_small]: size === 'sm',\n    [styles.button_medium]: size === 'md',\n    [styles.button_block]: isBlock,\n    [styles.button_loading]: isLoading,\n  });\n\n  if ('to' in props) {\n    return (\n      <Link {...props} className={classNames}>\n        {children}\n      </Link>\n    );\n  }\n  if ('href' in props) {\n    const linkProps = props.href.startsWith('http') ? { target: '_blank', rel: 'noopener noreferrer' } : {};\n    return (\n      <a {...props} {...linkProps} className={classNames}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <button {...props} className={classNames} disabled={disabled || isLoading}>\n      {children}\n    </button>\n  );\n};\n","import { FieldValidator } from 'final-form';\n\ntype Validator<T> = FieldValidator<T>;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const composeValidators = <T extends string>(...validators: Validator<T>[]) => (value: T, allValues: object) =>\n  validators.reduce((error, validator) => error || validator(value, allValues), undefined);\n\nexport const required = <T extends string>(value?: T) => (value ? undefined : 'Required');\n\nexport const minLength = (value?: string) => (value && value.length < 7 ? 'Must be 7 characters or more' : undefined);\n\nexport const maxLength = (value?: string) =>\n  value && value.length > 256 ? 'Must be 256 characters or less' : undefined;\n\nexport const number = (value?: string) => (value && isNaN(Number(value)) ? 'Must be a number' : undefined);\n\nexport const email = (value?: string) =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;\n\nexport const usPhone = (value?: string) => {\n  if (!value) return undefined;\n  return value.replace(/[-_]/g, '').length === 10 ? undefined : 'Invalid phone number, must be 10 digits';\n};\n","import React from 'react';\nimport { Field, FormRenderProps } from 'react-final-form';\n\nimport { Body2, Button, Input } from 'ui';\nimport { composeValidators, email, minLength, required } from 'services/formValidator';\n\nexport type LoginFormValues = {\n  email: string;\n  password: string;\n};\n\ntype Props = FormRenderProps<LoginFormValues>;\n\nexport const LoginForm = ({ handleSubmit, pristine, submitting, submitError }: Props) => (\n  <form onSubmit={handleSubmit}>\n    <Field\n      name=\"email\"\n      component={Input}\n      type=\"email\"\n      validate={composeValidators(required, email)}\n      label=\"User Name\"\n      placeholder=\"User Name\"\n      required\n    />\n\n    <Field\n      name=\"password\"\n      component={Input}\n      type=\"password\"\n      validate={composeValidators(required, minLength)}\n      label=\"Password\"\n      placeholder=\"Password\"\n      required\n    />\n\n    {submitError && <Body2 color=\"red\">{submitError}</Body2>}\n\n    <Button disabled={pristine || submitting} variant=\"primary\" size=\"md\" isBlock>\n      Sign In\n    </Button>\n  </form>\n);\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"http://washmix.evrone.app/api\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n\t    ? context.body\n\t    : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers():  HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TokenObtainSliding\n */\nexport interface TokenObtainSliding {\n    /**\n     * \n     * @type {string}\n     * @memberof TokenObtainSliding\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenObtainSliding\n     */\n    password: string;\n}\n\nexport function TokenObtainSlidingFromJSON(json: any): TokenObtainSliding {\n    return TokenObtainSlidingFromJSONTyped(json, false);\n}\n\nexport function TokenObtainSlidingFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenObtainSliding {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'],\n        'password': json['password'],\n    };\n}\n\nexport function TokenObtainSlidingToJSON(value?: TokenObtainSliding | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n        'password': value.password,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LoginResponse\n */\nexport interface LoginResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    token: string;\n}\n\nexport function LoginResponseFromJSON(json: any): LoginResponse {\n    return LoginResponseFromJSONTyped(json, false);\n}\n\nexport function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': json['token'],\n    };\n}\n\nexport function LoginResponseToJSON(value?: LoginResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Address\n */\nexport interface Address {\n    /**\n     * \n     * @type {number}\n     * @memberof Address\n     */\n    readonly id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    zipCode: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Address\n     */\n    readonly created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof Address\n     */\n    readonly changed?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    title: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    addressLine1: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    addressLine2?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    instructions?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Address\n     */\n    hasDoorman?: boolean;\n}\n\nexport function AddressFromJSON(json: any): Address {\n    return AddressFromJSONTyped(json, false);\n}\n\nexport function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'zipCode': json['zip_code'],\n        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),\n        'changed': !exists(json, 'changed') ? undefined : (new Date(json['changed'])),\n        'title': json['title'],\n        'addressLine1': json['address_line_1'],\n        'addressLine2': !exists(json, 'address_line_2') ? undefined : json['address_line_2'],\n        'instructions': !exists(json, 'instructions') ? undefined : json['instructions'],\n        'hasDoorman': !exists(json, 'has_doorman') ? undefined : json['has_doorman'],\n    };\n}\n\nexport function AddressToJSON(value?: Address | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'zip_code': value.zipCode,\n        'title': value.title,\n        'address_line_1': value.addressLine1,\n        'address_line_2': value.addressLine2,\n        'instructions': value.instructions,\n        'has_doorman': value.hasDoorman,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Client\n */\nexport interface Client {\n    /**\n     * \n     * @type {number}\n     * @memberof Client\n     */\n    readonly id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Client\n     */\n    readonly mainPhone?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Client\n     */\n    readonly firstName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Client\n     */\n\n    readonly client_numbers?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n\n    readonly lastName?: string;\n}\n\nexport function ClientFromJSON(json: any): Client {\n    return ClientFromJSONTyped(json, false);\n}\n\nexport function ClientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Client {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'mainPhone': !exists(json, 'main_phone') ? undefined : json['main_phone'],\n        'firstName': !exists(json, 'first_name') ? undefined : json['first_name'],\n        'lastName': !exists(json, 'last_name') ? undefined : json['last_name'],\n        'client_numbers': !exists(json, 'client_numbers') ? undefined : json['client_numbers'],\n\n    };\n}\n\nexport function ClientToJSON(value?: Client | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    Client,\n    ClientFromJSON,\n    ClientFromJSONTyped,\n    ClientToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Delivery\n */\nexport interface Delivery {\n    /**\n     * \n     * @type {number}\n     * @memberof Delivery\n     */\n    readonly id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    note?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    readonly order?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    kind?: DeliveryKindEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    status?: DeliveryStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    date?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    start?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    end?: string;\n    /**\n     * \n     * @type {Address}\n     * @memberof Delivery\n     */\n    address?: Address;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    readonly comment?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n    readonly isRush?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Delivery\n     */\n     readonly changed?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Delivery\n     */\n\n    sorting?: number | null;\n    /**\n     * \n     * @type {Client}\n     * @memberof Delivery\n     */\n    client?: Client;\n}\n\nexport function DeliveryFromJSON(json: any): Delivery {\n    return DeliveryFromJSONTyped(json, false);\n}\n\nexport function DeliveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Delivery {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'note': !exists(json, 'note') ? undefined : json['note'],\n        'order': !exists(json, 'order') ? undefined : json['order'],\n        'kind': !exists(json, 'kind') ? undefined : json['kind'],\n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'date': !exists(json, 'date') ? undefined : json['date'],\n        'start': !exists(json, 'start') ? undefined : json['start'],\n        'end': !exists(json, 'end') ? undefined : json['end'],\n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'comment': !exists(json, 'comment') ? undefined : json['comment'],\n        'isRush': !exists(json, 'is_rush') ? undefined : json['is_rush'],\n        'sorting': !exists(json, 'sorting') ? undefined : json['sorting'],\n        'client': !exists(json, 'client') ? undefined : ClientFromJSON(json['client']),\n        'changed': !exists(json, 'changed') ? undefined : json['changed'],\n\n    };\n}\n\nexport function DeliveryToJSON(value?: Delivery | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'note': value.note,\n        'kind': value.kind,\n        'status': value.status,\n        'date': value.date,\n        'start': value.start,\n        'end': value.end,\n        'changed': value.changed,\n\n        'address': AddressToJSON(value.address),\n        'sorting': value.sorting,\n        'client': ClientToJSON(value.client),\n    };\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DeliveryKindEnum {\n    Pickup = 'pickup',\n    Dropoff = 'dropoff'\n}\n/**\n* @export\n* @enum {string}\n*/\nexport enum DeliveryStatusEnum {\n    Cancelled = 'cancelled',\n    Accepted = 'accepted',\n    InProgress = 'in_progress',\n    Completed = 'completed'\n}\n\n\n","export const SERVICE_RADIUS = 15; // 15 miles\nexport const INACTIVE_EXPIRY_TIME = 60; // in minutes\nexport const STORE_LOCATION = { lat: 37.390071, lng: -122.081281 };\nexport const API_URL = process.env.REACT_APP_API_URL || '/api';\nexport const FACEBOOK_APP_ID = process.env.REACT_APP_FACEBOOK_APP_ID;\nexport const GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nexport const STRIPE_PUBLIC_KEY = process.env.REACT_APP_STRIPE_PUBLIC_KEY || '';\nexport const GOOGLE_PLACES_API_KEY = process.env.REACT_APP_GOOGLE_PLACES_API_KEY || '';\nexport const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\nexport const POS_DISCOUNT_PASSWORDS = process.env.REACT_APP_POS_DISCOUNT_PASSWORDS || '';\n","import { Configuration, DeliveryStatusEnum, DriverApi, TokenObtainSliding as LoginCredentials } from 'api';\nimport { getUser } from '../../services/storage';\nimport { API_URL } from '../../constants/common';\n\nconst configuration = new Configuration({\n  basePath: API_URL,\n  apiKey: () => `Bearer ${getUser()?.token}`,\n});\n\nconst api = new DriverApi(configuration);\n\nexport const postLogin = async (credentials: LoginCredentials) => api.driverAuthLoginCreate(credentials);\n\nexport const getDeliveries = () => api.driverDeliveriesList();\n\nexport const patchDeliverytoAccepted = (id: number) =>\n  api.driverDeliveriesPartialUpdate(`${id}`, { status: DeliveryStatusEnum.Accepted });\nexport const patchDeliverytoInProgress = (id: number) =>\n  api.driverDeliveriesPartialUpdate(`${id}`, { status: DeliveryStatusEnum.InProgress });\nexport const patchDeliverytoCompleted = (id: number) =>\n  api.driverDeliveriesPartialUpdate(`${id}`, { status: DeliveryStatusEnum.Completed });\n\nexport const patchDeliveryStart = (id: number) =>\n  api.driverDeliveriesPartialUpdate(`${id}`, { status: DeliveryStatusEnum.InProgress });\n\nexport const patchDeliveryFinish = (id: number) =>\n  api.driverDeliveriesPartialUpdate(`${id}`, { status: DeliveryStatusEnum.Completed });\n\nexport const patchDeliveryNote = (id: number, note: string) => api.driverDeliveriesPartialUpdate(`${id}`, { note });\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * WashMix\n * WashMix REST API\n *\n * The version of the OpenAPI document: v1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    Delivery,\n    DeliveryFromJSON,\n    DeliveryToJSON,\n    LoginResponse,\n    LoginResponseFromJSON,\n    LoginResponseToJSON,\n    TokenObtainSliding,\n    TokenObtainSlidingFromJSON,\n    TokenObtainSlidingToJSON,\n} from '../models';\n\nexport interface DriverAuthLoginCreateRequest {\n    data: TokenObtainSliding;\n}\n\nexport interface DriverDeliveriesCreateRequest {\n    data: Delivery;\n}\n\nexport interface DriverDeliveriesDeleteRequest {\n    id: string;\n}\n\nexport interface DriverDeliveriesPartialUpdateRequest {\n    id: string;\n    data: Delivery;\n}\n\nexport interface DriverDeliveriesReadRequest {\n    id: string;\n}\n\nexport interface DriverDeliveriesUpdateRequest {\n    id: string;\n    data: Delivery;\n}\n\n/**\n * \n */\nexport class DriverApi extends runtime.BaseAPI {\n\n    /**\n     */\n    async driverAuthLoginCreateRaw(requestParameters: DriverAuthLoginCreateRequest): Promise<runtime.ApiResponse<LoginResponse>> {\n        if (requestParameters.data === null || requestParameters.data === undefined) {\n            throw new runtime.RequiredError('data','Required parameter requestParameters.data was null or undefined when calling driverAuthLoginCreate.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/driver/auth/login/`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: TokenObtainSlidingToJSON(requestParameters.data),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LoginResponseFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async driverAuthLoginCreate(data: TokenObtainSliding): Promise<LoginResponse> {\n        const response = await this.driverAuthLoginCreateRaw({ data: data });\n        return await response.value();\n    }\n\n    /**\n     */\n    async driverDeliveriesCreateRaw(requestParameters: DriverDeliveriesCreateRequest): Promise<runtime.ApiResponse<Delivery>> {\n        if (requestParameters.data === null || requestParameters.data === undefined) {\n            throw new runtime.RequiredError('data','Required parameter requestParameters.data was null or undefined when calling driverDeliveriesCreate.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeliveryToJSON(requestParameters.data),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async driverDeliveriesCreate(data: Delivery): Promise<Delivery> {\n        const response = await this.driverDeliveriesCreateRaw({ data: data });\n        return await response.value();\n    }\n\n    /**\n     */\n    async driverDeliveriesDeleteRaw(requestParameters: DriverDeliveriesDeleteRequest): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling driverDeliveriesDelete.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/{id}/`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     */\n    async driverDeliveriesDelete(id: string): Promise<void> {\n        await this.driverDeliveriesDeleteRaw({ id: id });\n    }\n\n    /**\n     */\n    async driverDeliveriesListRaw(): Promise<runtime.ApiResponse<Array<Delivery>>> {\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DeliveryFromJSON));\n    }\n\n    /**\n     */\n    async driverDeliveriesList(): Promise<Array<Delivery>> {\n        const response = await this.driverDeliveriesListRaw();\n        return await response.value();\n    }\n\n    /**\n     */\n    async driverDeliveriesPartialUpdateRaw(requestParameters: DriverDeliveriesPartialUpdateRequest): Promise<runtime.ApiResponse<Delivery>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling driverDeliveriesPartialUpdate.');\n        }\n\n        if (requestParameters.data === null || requestParameters.data === undefined) {\n            throw new runtime.RequiredError('data','Required parameter requestParameters.data was null or undefined when calling driverDeliveriesPartialUpdate.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/{id}/`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeliveryToJSON(requestParameters.data),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async driverDeliveriesPartialUpdate(id: string, data: Delivery): Promise<Delivery> {\n        const response = await this.driverDeliveriesPartialUpdateRaw({ id: id, data: data });\n        return await response.value();\n    }\n\n    /**\n     */\n    async driverDeliveriesReadRaw(requestParameters: DriverDeliveriesReadRequest): Promise<runtime.ApiResponse<Delivery>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling driverDeliveriesRead.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/{id}/`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async driverDeliveriesRead(id: string): Promise<Delivery> {\n        const response = await this.driverDeliveriesReadRaw({ id: id });\n        return await response.value();\n    }\n\n    /**\n     */\n    async driverDeliveriesUpdateRaw(requestParameters: DriverDeliveriesUpdateRequest): Promise<runtime.ApiResponse<Delivery>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling driverDeliveriesUpdate.');\n        }\n\n        if (requestParameters.data === null || requestParameters.data === undefined) {\n            throw new runtime.RequiredError('data','Required parameter requestParameters.data was null or undefined when calling driverDeliveriesUpdate.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = this.configuration.apiKey(\"Authorization\"); // Bearer authentication\n        }\n\n        const response = await this.request({\n            path: `/driver/deliveries/{id}/`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeliveryToJSON(requestParameters.data),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async driverDeliveriesUpdate(id: string, data: Delivery): Promise<Delivery> {\n        const response = await this.driverDeliveriesUpdateRaw({ id: id, data: data });\n        return await response.value();\n    }\n\n}\n","import moment from 'moment';\n\nconst API_DATE_FORMAT = 'YYYY-MM-DD';\n\nconst parseDate = (date?: string | Date) => {\n  if (!date) {\n    return moment();\n  }\n  if (typeof date === 'string') {\n    return moment(date, API_DATE_FORMAT);\n  }\n  return moment(date);\n};\n\nexport const formatDate = (date?: string | Date) => parseDate(date).format('dddd[,] MMMM Do');\n\nexport const formatDateShort = (date?: string | Date) => parseDate(date).format('L');\n\nexport const formatDateLong = (date?: string | Date) => parseDate(date).format('LL');\n\nexport const addOneDay = (date?: Date) => moment(date).add(1, 'day').format(API_DATE_FORMAT);\nexport const addTwoDays = (date?: Date) => moment(date).add(2, 'day').format(API_DATE_FORMAT);\n\nexport const dateToApiFormat = (date?: moment.Moment | null) => (date ? date.format(API_DATE_FORMAT) : null);\n\nexport const delay = (timeout: number) =>\n  new Promise<null>((resolve) => {\n    setTimeout(() => resolve(null), timeout);\n  });\n","import React, { ChangeEvent, useCallback } from 'react';\nimport cn from 'classnames';\nimport styles from './Textarea.module.scss';\n\ntype Props = {\n  label: string;\n  placeholder?: string;\n  disabled?: boolean;\n  required?: boolean;\n  name?: string;\n  error?: string;\n  value: string;\n  onChange: (value: string) => void;\n  isLoading?: boolean;\n  isSuccess?: boolean;\n  rows?: number;\n};\n\nconst NBSP = '\\u00A0';\n\nexport const TextareaStateless = ({ label, name, error, onChange, required, isLoading, isSuccess, ...rest }: Props) => {\n  const isError = Boolean(error);\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement>) => {\n      onChange?.(e.currentTarget.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <div className={cn(styles.textarea, { [styles.textarea_error]: isError })}>\n      <label className={styles.textarea__label} htmlFor={name}>\n        {label}\n      </label>\n      <textarea\n        id={name}\n        className={cn(styles.textarea__field, {\n          [styles.textarea__field_error]: isError,\n          [styles.textarea__field_success]: isSuccess,\n        })}\n        onChange={handleChange}\n        {...rest}\n      />\n      {required && <i className={cn(styles.textarea__oval, { [styles.textarea__oval_error]: isError })} />}\n      {isLoading && <i className={cn(styles.textarea__loading)} />}\n      <span className={styles.textarea__errorMessage}>{isError ? error : NBSP}</span>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { TextareaStateless } from 'ui';\nimport { useDebounce } from 'hooks';\nimport { patchDeliveryNote } from './apiDriver';\n\ntype Props = {\n  id?: number;\n  initialValue?: string;\n};\n\nconst NOTE_SUBMITTING_DELAY = 500;\n\nexport const Note = ({ id, initialValue }: Props) => {\n  const [value, setValue] = useState(initialValue ?? '');\n  const debouncedCouponTerm = useDebounce(value, NOTE_SUBMITTING_DELAY);\n  const { isLoading, isSuccess } = useQuery([id, debouncedCouponTerm], patchDeliveryNote, {\n    enabled: debouncedCouponTerm && debouncedCouponTerm !== (initialValue ?? ''),\n  });\n\n  return (\n    <TextareaStateless\n      rows={2}\n      label=\"Note\"\n      name=\"note\"\n      value={value}\n      onChange={setValue}\n      isLoading={isLoading}\n      isSuccess={isSuccess}\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport function useDebounce<T>(value: T, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { queryCache, useMutation } from 'react-query';\n\nimport { Body, Button } from 'ui';\nimport { Delivery, DeliveryStatusEnum } from 'api';\nimport { capitalize, snakeToWhite } from 'utils/string';\nimport { formatDateShort } from 'utils/date';\nimport {\n  patchDeliveryFinish,\n  patchDeliveryStart,\n  patchDeliverytoAccepted,\n  patchDeliverytoCompleted,\n  patchDeliverytoInProgress,\n} from './apiDriver';\nimport styles from './Route.module.scss';\nimport { Note } from './Note';\nimport moment from 'moment';\n\ntype Props = {\n  delivery: Delivery;\n};\n\nexport const Route = ({ delivery }: Props) => {\n  const [changeStatus, setChangeStatus] = useState<boolean>(false);\n  const [changeTo, setChangeTo] = useState<string>('Accepted');\n\n  const [deliveryStart] = useMutation(patchDeliveryStart, {\n    onSuccess: () => queryCache.invalidateQueries('deliveries'),\n  });\n  const [deliveryFinish] = useMutation(patchDeliveryFinish, {\n    onSuccess: () => queryCache.invalidateQueries('deliveries'),\n  });\n\n  const [deliveryAccepted] = useMutation(patchDeliverytoAccepted, {\n    onSuccess: () => queryCache.invalidateQueries('deliveries'),\n  });\n  const [deliveryInProgress] = useMutation(patchDeliverytoInProgress, {\n    onSuccess: () => queryCache.invalidateQueries('deliveries'),\n  });\n  const [deliveryCompleted] = useMutation(patchDeliverytoCompleted, {\n    onSuccess: () => queryCache.invalidateQueries('deliveries'),\n  });\n\n  const handleStart = useCallback(async () => {\n    await deliveryStart(delivery.id);\n  }, [delivery, deliveryStart]);\n\n  const handleFinish = useCallback(async () => {\n    await deliveryFinish(delivery.id);\n  }, [delivery, deliveryFinish]);\n\n  const handleStatusUpdate = useCallback(\n    async (newStatus) => {\n      if (newStatus === '') {\n        return;\n      }\n\n      if (newStatus === 'Accepted') {\n        await deliveryAccepted(delivery.id);\n      }\n      if (newStatus === 'In Progress') {\n        await deliveryInProgress(delivery.id);\n      }\n      if (newStatus === 'Completed') {\n        await deliveryCompleted(delivery.id);\n      }\n    },\n    [delivery, deliveryAccepted, deliveryCompleted, deliveryInProgress],\n  );\n\n  return (\n    <div className={cn(styles.route, { [styles.route_rush]: delivery.isRush })}>\n      <div className={styles.route__aligner}>\n        <div className={styles.route__statement}>\n          <Body>\n            Type: <strong>{capitalize(delivery.kind)}</strong>\n          </Body>\n        </div>\n        <div className={styles.route__statement}>\n          <Body>\n            Date: <strong>{formatDateShort(delivery.date)}</strong>\n          </Body>\n        </div>\n      </div>\n      <div className={styles.route__statement}>\n        <div className={styles.statusWithChange}>\n          <Body>\n            Status: <strong>{capitalize(snakeToWhite(delivery.status))}</strong>{' '}\n          </Body>\n          <div>\n            {!changeStatus ? (\n              <div onClick={() => setChangeStatus(true)}>Change?</div>\n            ) : (\n              <div onClick={() => setChangeStatus(false)}>Cancel</div>\n            )}\n          </div>\n        </div>\n      </div>\n      {changeStatus ? (\n        <div className={styles.row_contain}>\n          {/* <div>Change to: </div> */}\n          <select\n            value={changeTo}\n            onChange={(e) => {\n              console.log('in fun', e.target.value);\n              setChangeTo(e.target.value);\n            }}\n            className={styles.delivery_select}\n          >\n            <option>Accepted</option>\n            <option>In Progress</option>\n            <option>Completed</option>\n          </select>\n          <div className={styles.delivery_btn} onClick={() => handleStatusUpdate(changeTo)}>\n            Update\n          </div>\n        </div>\n      ) : null}\n      <br />\n      <div className={styles.route__statement}>\n        <Body>\n          Address:{' '}\n          <strong>\n            <a href={`geo:${delivery.address?.addressLine1}`}>\n              {delivery.address?.addressLine2}, {delivery.address?.addressLine1}, {delivery.address?.zipCode}\n              {delivery.address?.hasDoorman && ', Has Doorman'}\n            </a>\n          </strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Instructions: <strong>{delivery.address?.instructions}</strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Comment: <strong>{delivery.comment}</strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Phone:{' '}\n          <a href={`tel:${delivery.client?.mainPhone}`}>\n            <strong>{delivery.client?.mainPhone}</strong>\n          </a>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Customer:{' '}\n          <strong>\n            {delivery.client?.firstName} {delivery.client?.lastName}\n          </strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Rush: <strong>{delivery.isRush ? 'Yes' : 'No'}</strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Last updated: <strong>{moment(delivery.changed).format('DD MMM YYYY hh:mm:ss a')}</strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Body>\n          Additional Numbers:&nbsp;\n          <strong>{delivery.client && delivery.client.client_numbers ? delivery.client.client_numbers : 'N/A'}</strong>\n        </Body>\n      </div>\n      <div className={styles.route__statement}>\n        <Note id={delivery.id} initialValue={delivery.note} />\n      </div>\n      <div className={styles.route__actions}>\n        {delivery.status === DeliveryStatusEnum.Accepted && (\n          <Button variant=\"primary\" size=\"sm\" onClick={handleStart}>\n            Start Route\n          </Button>\n        )}\n        {delivery.status === DeliveryStatusEnum.InProgress && (\n          <Button variant=\"primary\" size=\"sm\" onClick={handleFinish}>\n            Finish Route\n          </Button>\n        )}\n        {delivery.status === DeliveryStatusEnum.Completed && <Body>Delivery Completed</Body>}\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { parse } from 'query-string';\n\nimport { snakeToWhite } from 'utils/string';\nimport { Body } from 'ui';\n\ntype Props = {\n  currentStatus: string;\n  setStatus: (status: string) => void;\n};\n\nconst eitherArray = (value: string | string[] | null) => (Array.isArray(value) ? value.join('') : value);\n\nexport const StatusFilter = ({ currentStatus, setStatus }: Props) => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    window.history.replaceState(null, '', e.currentTarget.href);\n    const newStatus = parse(e.currentTarget.attributes.getNamedItem('href')?.value ?? '')?.status;\n    setStatus(eitherArray(newStatus) ?? 'new');\n  };\n\n  return (\n    <Body>\n      Status:{' '}\n      {['new', 'completed'].map((status, index) => (\n        <Fragment key={status}>\n          {index > 0 && ', '}\n          {status === currentStatus ? (\n            snakeToWhite(status)\n          ) : (\n            <a onClick={handleClick} href={`?status=${status}`}>\n              {snakeToWhite(status)}\n            </a>\n          )}\n        </Fragment>\n      ))}\n    </Body>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { queryCache, useQuery } from 'react-query';\nimport { parse } from 'query-string';\nimport styles from './Route.module.scss';\n\nimport { DeliveryStatusEnum } from 'api';\nimport { Route } from './Route';\nimport { getDeliveries } from './apiDriver';\nimport { StatusFilter } from './StatusFilter';\n\nconst eitherArray = (value: string | string[] | null) => (Array.isArray(value) ? value.join('') : value);\n\nexport const Deliveries = () => {\n  const [currentStatus, setStatus] = useState(eitherArray(parse(document.location.search)?.status) ?? 'new');\n  const [currentFilter, setFilter] = useState<any>('All');\n  const [currentSearch, setSearch] = useState<string>('');\n\n  const { data: deliveries, isLoading } = useQuery('deliveries', getDeliveries);\n\n  useEffect(() => {\n    queryCache.invalidateQueries('deliveries');\n  }, [currentStatus]);\n\n  return (\n    <>\n      <StatusFilter currentStatus={currentStatus} setStatus={setStatus} />\n      <div className={styles.col_contain}>\n        <p>Filter:</p>\n        <select value={currentFilter} onChange={(e) => setFilter(e.target.value)} className={styles.delivery_select}>\n          <option>All</option>\n\n          <option>Pick up</option>\n          <option>Drop-off</option>\n          <option>Rush</option>\n        </select>\n      </div>\n      <div className={styles.col_contain}>\n        <p>Search:</p>\n        <input\n          type=\"text\"\n          value={currentSearch}\n          onChange={(e) => setSearch(e.target.value)}\n          className={styles.delivery_select}\n        ></input>\n      </div>\n      {isLoading && <div>Loading...</div>}\n      {deliveries\n        ?.filter((delivery) =>\n          currentStatus === 'new'\n            ? delivery.status === DeliveryStatusEnum.Accepted || delivery.status === DeliveryStatusEnum.InProgress\n            : delivery.status === DeliveryStatusEnum.Completed || delivery.status === DeliveryStatusEnum.Cancelled,\n        )\n        ?.map((delivery) => {\n          if (\n            currentSearch !== '' &&\n            delivery &&\n            delivery.client &&\n            delivery.client.firstName &&\n            delivery.client.lastName &&\n            delivery.address &&\n            delivery.address.addressLine1 &&\n            (delivery.client.firstName.toLowerCase().includes(currentSearch.toLowerCase()) ||\n              delivery.client.lastName.toLowerCase().includes(currentSearch.toLowerCase()) ||\n              delivery.address.addressLine1.toLowerCase().includes(currentSearch.toLowerCase()))\n          ) {\n            if (currentFilter === 'All') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Pick up' && delivery.kind === 'pickup') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Drop-off' && delivery.kind === 'dropoff') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Rush' && delivery.isRush) {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n          } else if (currentSearch === '') {\n            if (currentFilter === 'All') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Pick up' && delivery.kind === 'pickup') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Drop-off' && delivery.kind === 'dropoff') {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n            if (currentFilter === 'Rush' && delivery.isRush) {\n              return <Route key={delivery.id} delivery={delivery} />;\n            }\n          }\n          return null;\n        })}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\ntype Props = {\n  initialTime?: string;\n  onTimeout: () => void;\n};\n\nconst LOGOUT_TIMEOUT = 30 * 60 * 1000;\n\nconst millisecondsToMinutesAndSeconds = (milliseconds: number) => {\n  const ms = Math.abs(milliseconds);\n  const sign = milliseconds < 0 ? '-' : '';\n  const minutes = Math.floor(ms / 60000);\n  const seconds = ((ms % 60000) / 1000).toFixed(0);\n  if (seconds === '60') return `${minutes + 1}:00`;\n  return `${sign}${minutes}:${seconds.padStart(2, '0')}`;\n};\n\nconst getRemainingTime = (time: string) => moment(time).add(LOGOUT_TIMEOUT).diff(moment());\n\nexport const Timer = ({ initialTime, onTimeout }: Props) => {\n  const [timer, setTimer] = useState(millisecondsToMinutesAndSeconds(initialTime ? getRemainingTime(initialTime) : 0));\n\n  useEffect(() => {\n    if (!initialTime) {\n      return;\n    }\n    const interval = setInterval(() => {\n      const remainingTime = getRemainingTime(initialTime);\n      setTimer(millisecondsToMinutesAndSeconds(remainingTime));\n      if (remainingTime <= 0) {\n        onTimeout();\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [initialTime, onTimeout]);\n\n  return <span>{timer}</span>;\n};\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { FORM_ERROR } from 'final-form';\nimport { Form } from 'react-final-form';\nimport { useMutation } from 'react-query';\nimport moment from 'moment';\n\nimport { H3, Link } from 'ui';\nimport { cleanUser, getUser, saveUserStorage } from 'services/storage';\nimport { normalizeAsyncError } from 'utils/object';\nimport styles from './Driver.module.scss';\nimport { LoginForm, LoginFormValues } from './LoginForm';\nimport { postLogin } from './apiDriver';\nimport { Deliveries } from './Deliveries';\nimport { Timer } from './Timer';\n\nconst initialUserState = getUser();\n\nexport const Driver = () => {\n  const [user, setUser] = useState(initialUserState);\n  const [login] = useMutation(postLogin, { throwOnError: true });\n\n  const handleSubmit = useCallback(\n    async (values: LoginFormValues) => {\n      const response = await login(values).catch(normalizeAsyncError);\n      if (response && 'token' in response) {\n        const user = { token: response.token, email: values.email, loginTime: moment().toISOString() };\n        setUser(user);\n        saveUserStorage(user);\n      } else {\n        return { [FORM_ERROR]: response?.detail ?? 'Something went wrong' };\n      }\n    },\n    [login],\n  );\n\n  const handleOnTimeout = useCallback(() => {\n    cleanUser();\n    document.location.reload();\n  }, []);\n\n  const handleLogout = useCallback(() => {\n    setUser(undefined);\n    cleanUser();\n  }, []);\n\n  return (\n    <div>\n      <div className={cn(styles.driver, { [styles.driver___login]: !user?.token })}>\n        <div className={styles.driver__container}>\n          {user?.token ? (\n            <>\n              <H3 className={styles.driver__title}>\n                {user.email} / <Link onClick={handleLogout}>Logout</Link>\n              </H3>\n              <div>\n                Logout in <Timer onTimeout={handleOnTimeout} initialTime={user.loginTime} />\n              </div>\n              <Deliveries />\n            </>\n          ) : (\n            <Form<LoginFormValues> onSubmit={handleSubmit} component={LoginForm} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ReactQueryConfig, ReactQueryConfigProvider } from 'react-query';\n\nimport { Driver } from './driver/Driver';\nimport '../index.scss';\nimport './DriverApp.css';\n\nconst reactQueryConfig: ReactQueryConfig = {\n  queries: {\n    retry: false,\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n  },\n  mutations: {\n    throwOnError: true,\n  },\n};\n\nexport const DriverApp = () => {\n  return (\n    <ReactQueryConfigProvider config={reactQueryConfig}>\n      <Driver />\n    </ReactQueryConfigProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { DriverApp } from './apps/DriverApp';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nrender(<DriverApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}